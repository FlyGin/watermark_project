import numpy as np
from PIL import Image
import os
from watermark.embedding import embed
from watermark.extraction import extract

def run_demo():
    """–î–µ–º–æ –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é LSB"""
    print("\n--- LSB Image Demo ---")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    cover_image = np.random.randint(0, 256, (512, 512, 3), dtype=np.uint8)
    print(f"–°–æ–∑–¥–∞–Ω–æ –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–º: {cover_image.shape}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞)
    secret_image = np.random.randint(0, 256, (64, 64, 3), dtype=np.uint8)
    print(f"–°–æ–∑–¥–∞–Ω–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–º: {secret_image.shape}")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è
    params = {
        "depth": 2,
        "secret_shape": secret_image.shape
    }
    
    try:
        # –í—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ
        print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ...")
        stego_image = embed(cover_image, secret_image, params, method="lsb")
        print("‚úÖ –í—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ
        print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ...")
        extracted_image = extract(stego_image, params, method="lsb")
        print("‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
        if isinstance(extracted_image, np.ndarray) and extracted_image.shape == secret_image.shape:
            # –í—ã—á–∏—Å–ª—è–µ–º MSE (Mean Squared Error)
            mse = np.mean((secret_image - extracted_image) ** 2)
            print(f"MSE –º–µ–∂–¥—É –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º –∏ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–º: {mse:.2f}")
            
            if mse < 10:
                print("üéâ –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è!")
            elif mse < 50:
                print("‚úÖ –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
            else:
                print("‚ö†Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è")
        else:
            print("‚ùå –û—à–∏–±–∫–∞: –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ: {e}")
    
    print("–î–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.\n")

if __name__ == "__main__":
    run_demo()
