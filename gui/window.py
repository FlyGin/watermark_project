# gui/window.py
# ============================================================================
# ГЛАВНОЕ ОКНО ПРИЛОЖЕНИЯ - ТОЧКА ВХОДА В GUI
# ============================================================================
# Этот файл является "главным дирижёром" GUI приложения. Он создает главное
# окно, объединяет интерфейс (layout.py) с логикой (events.py) и запускает
# приложение.
#
# Архитектура GUI состоит из трех файлов:
# 1. window.py   - главное окно и запуск приложения (ЭТОТ ФАЙЛ)
# 2. layout.py   - создание интерфейса (кнопки, поля, окна)
# 3. events.py   - обработка событий (что происходит при нажатии кнопок)
# ============================================================================

import sys
import os

# ============================================================================
# НАСТРОЙКА ИМПОРТА МОДУЛЕЙ
# ============================================================================
# Добавляем корневую папку проекта в sys.path, чтобы Python мог найти
# наши модули (watermark.embedding, watermark.extraction и т.д.)
# Без этого при запуске gui/window.py напрямую будет ошибка "No module named 'gui'"
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Импорт компонентов PyQt5 для создания GUI
from PyQt5.QtWidgets import QApplication, QMainWindow

# Импорт наших модулей
from gui.layout import create_main_layout  # Функция создания интерфейса
from gui.events import connect_events      # Функция подключения обработчиков событий

class MainWindow(QMainWindow):
    """
    ========================================================================
    КЛАСС ГЛАВНОГО ОКНА ПРИЛОЖЕНИЯ
    ========================================================================
    Этот класс наследуется от QMainWindow (стандартное главное окно PyQt5)
    и является контейнером для всего пользовательского интерфейса.
    
    Что делает __init__ (конструктор):
    1. Вызывает конструктор родительского класса
    2. Устанавливает заголовок окна
    3. Создает интерфейс (кнопки, поля и т.д.)
    4. Подключает обработчики событий (что происходит при нажатии кнопок)
    ========================================================================
    """
    def __init__(self):
        # Вызываем конструктор родительского класса QMainWindow
        super().__init__()
        
        # Устанавливаем заголовок окна (отображается в верхней строке)
        self.setWindowTitle("Watermark Project")
        
        # Создаем пользовательский интерфейс и устанавливаем его как центральный виджет
        # create_main_layout(self) создает все кнопки, поля и элементы интерфейса
        self.setCentralWidget(create_main_layout(self))
        
        # Подключаем обработчики событий (связываем кнопки с функциями)
        # После этого нажатие на кнопки будет вызывать соответствующие функции
        connect_events(self)

def run():
    """
    ========================================================================
    ФУНКЦИЯ ЗАПУСКА GUI ПРИЛОЖЕНИЯ
    ========================================================================
    Эта функция создает и запускает весь GUI. Вызывается при запуске
    gui/window.py как основного скрипта.
    
    Этапы запуска:
    1. Создается объект QApplication (менеджер всего GUI)
    2. Создается главное окно (MainWindow)
    3. Окно отображается на экране
    4. Запускается главный цикл обработки событий
    
    sys.exit(app.exec_()) - это главный цикл программы, который:
    - Ждет действий пользователя (клики, ввод текста)
    - Обрабатывает события
    - Обновляет интерфейс
    - Завершается только при закрытии окна
    ========================================================================
    """
    import sys
    
    # Создаем объект приложения (обязательно для любого PyQt5 приложения)
    app = QApplication(sys.argv)
    
    # Создаем экземпляр нашего главного окна
    main_window = MainWindow()
    
    # Отображаем окно на экране (делаем видимым)
    main_window.show()
    
    # Запускаем главный цикл обработки событий
    # Программа будет работать до закрытия окна
    sys.exit(app.exec_())

# ============================================================================
# ТОЧКА ВХОДА В ПРОГРАММУ
# ============================================================================
# Эта секция выполняется только при запуске файла напрямую
# (например: python gui/window.py)
# Если файл импортируется из другого места, эта секция не выполняется

if __name__ == "__main__":
    run()  # Запускаем GUI приложение

# ============================================================================
# ИТОГО: КАК РАБОТАЕТ ВЕСЬ GUI
# ============================================================================
# 1. Запускается gui/window.py
# 2. Создается QApplication и MainWindow
# 3. MainWindow вызывает create_main_layout() из layout.py
#    - Создаются все кнопки, поля, окна предпросмотра
# 4. MainWindow вызывает connect_events() из events.py  
#    - Кнопки связываются с функциями обработки
# 5. Окно отображается и ждет действий пользователя
# 6. При нажатии кнопок вызываются функции из events.py
# 7. Функции выполняют стеганографические операции и обновляют интерфейс
# ============================================================================